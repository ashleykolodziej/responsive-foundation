/* placeholders for theme use
----------------------------------------------------------------- */
%wrapper-styles {
	/* These classes are using %wrapper-styles. */
	overflow: hidden;
}
%container-styles {
	@extend %clearfix;
	/* These classes are using %container-styles. */
	width: 100%;
	padding: $grid-container-padding;
	margin: 0 auto;

	@include breakpoint(sm) {
		max-width: $container-SM;
		padding: $grid-container-padding-largeScreen;
	}
	@include breakpoint(md) {
		max-width: $container-MD;
	}
	@include breakpoint(lg) {
		max-width: $container-LG;
	}
}
%row-styles {
	@extend %clearfix;
	/* These classes are using %row-styles. */
	margin: $grid-row-margin;

	@include breakpoint(sm) {
		margin-right: 0;
	}
}
%row-child-styles {
	/* These classes are using %row-child-styles. */
	padding: $grid-column-padding;
}
%equal-height-parent {
	/* These classes are using %equal-height-parent. */
	overflow: hidden;
}
%equal-height-child {
	@include breakpoint(md) {
		/* These classes are using %equal-height-child. */
		padding-bottom: 99999px;
		margin-bottom: -99999px;
	}
}

// Additional placeholders are available for the grid. See below for detailed docs.
// Examples: %col-sm-one-half, %col-3, %col-md-6
// Optional: %col-md-margin-6, %col-md-push-6, %col-md-offset-6, %col-md-pull-6

/* grid
----------------------------------------------------------------- */

.wrapper {
	@extend %wrapper-styles;
}
.content {
	position: relative;
}
.container {
	@extend %container-styles;
}
.row {
	@extend %row-styles;
}
.row [class*="col-"] {
	@extend %row-child-styles;
}
.row .row:nth-last-of-type(1) {
	margin-bottom: 0;
}

// Grid placeholders

// Builds placeholder classes for the grid.
// Available classes follow the pattern below.

// Friendly classes for common column needs, avaiable for the following breakpoints and sizes:
// 	Breakpoints: sm, md
// 	Sizes: 1/4, 1/3, 1/2, 2/3, 3/4, whole column
// 	Examples:
// 		Make something take up 1/2 of available space starting at the small breakpoint:
// 			@extend %col-sm-one-half;
// 		Make something take up 3/4 of available space starting at the medium breakpoint:
// 			@extend %col-md-three-quarter;

// For your less obvious grid needs:
// 	Basic usage (no breakpoints):
// 		@extend %col-3;
// 	Half column that starts only at medium breakpoints (half of 12):
// 		@extend %col-md-6;

// Optional grid classes are available as well, and may be turned on or off using variables:
// 	Margin: Automatically calculates width with margin included. Handy for items with a background color.
// 		Example: Make something take up 6 columns, starting at medium breakpoint, with margins:
// 		Usage: @extend %col-md-margin-6;
// 	Push: position ___ number of columns to the right (no affect on document flow)
// 		Example: Position something 6 columns to the right without affecting anything else
// 		Usage: @extend %col-md-push-6;
// 	Offset: position ___ number of columns to the right (does affect document flow)
// 		Example: Position something 6 columns to the right and bump everything else along with it
// 		Usage: @extend %col-md-offset-6;
// 	Pull: position ___ number of columns to the pull (does not affect document flow)
// 		Example: Position something 6 columns to the pull without affecting anything else
// 		Usage: @extend %col-md-pull-6;

//	Grid controls (see _variables.scss)
//		$grid-number-columns
//			Controls number of columns in grid.
//			Required: Columns must be neatly divisible by 2, 3, and 4.
//			Default: 12
//		$grid-breakpoints
//			The breakpoints you want grids to begin at.
//			Required: Small and medium if you use burf-theme. Large is optional.
//			Default: "small", "medium"
//		$grid-margins
//			Turn on optional margin classes.
//			Default: false
//		$grid-margin-width
//			Your desired grid margin, in %. Default value works out to 20px on large screens.
//			Relies on $grid-margins being set to "true".
//			Default: 2.6
//		$grid-push
//			Turn on optional push classes.
//			Default: false
//		$grid-pull
//			Turn on optional pull classes.
//			Default: false
//		$grid-offset
//			Turn on optional offset classes.
//			Default: false

// Base styles
%col-float {
	/* These classes are using %col-float. */
	float: left;
}
%col-base {
	/* These classes are using %col-base. */
	position: relative;
	min-height: 1px;
}
%col-margin-base {
	/* These classes are using %col-margin-base. */
	margin: $grid-margin-width#{"%"};
	margin-top: 0;
	padding: 20px;
	@include breakpoint(small) {
		margin-right: 0;
	}
}

// A helper mixin to build grid styles. No need to use outside this file.
@mixin gridBuild($cssproperty, $amount) {
	#{$cssproperty}: #{$amount}#{"%"};
}

// Initial grid setup
$grid-widths: ();
$grid-widths-margins: ();

@for $i from 1 through $grid-number-columns {
	// Determine current base width
	$percentage: ($i / $grid-number-columns)*100;
	// Create a list of widths for gridBuild to use later
	$grid-widths: append($grid-widths, $percentage, comma);
	// If margins are turned on, also create a list with width excluding margin
	@if $grid-margins {
		$grid-widths-margins: append($grid-widths-margins, ($percentage - $grid-margin-width), comma);
	}
	// Create basic grid classes, no breakpoints
	// Example output: %col-1
	%col-#{$i} {
		/* These classes are using %col-#{$i}. */
		@extend %col-base;
		@extend %col-float;
		@include gridBuild(width, $percentage);
	}
}

// Breakpoints time

@each $breakpoint in $grid-breakpoints {
	@for $i from 1 through $grid-number-columns {
		// Add to base styles
		%col-#{$breakpoint} {
			&-#{$i} {
				@extend %col-base;
			}
			@if $grid-margins {
				&-margin-#{$i} {
					@extend %col-margin-base;
				}
			}
		}
	}
	@include breakpoint($breakpoint) {
		@for $i from 1 through length($grid-widths) {
			// Get percentage from earlier
			$percentage: nth($grid-widths, $i);

			%col-#{$breakpoint} {
				&-#{$i} {
					/* These classes are using %col-#{$breakpoint}-#{$i}. */
					@include gridBuild(width, $percentage);
					float: left;
				}
				@if $grid-margins {
					&-margin-#{$i} {
						/* These classes are using %col-#{$breakpoint}-margin-#{$i}. */
						$percentage: nth($grid-widths-margins, $i);
						@include gridBuild(width, $percentage);
						float: left;
					}
				}
				@if $grid-push {
					&-push-#{$i} {
						/* These classes are using %col-#{$breakpoint}-push-#{$i}. */
						@include gridBuild(left, $percentage);
						float: left;
					}
				}
				@if $grid-pull {
					&-pull-#{$i} {
						/* These classes are using %col-#{$breakpoint}-pull-#{$i}. */
						@include gridBuild(right, $percentage);
						float: left;
					}
				}
				@if $grid-offset {
					&-offset-#{$i} {
						/* These classes are using %col-#{$breakpoint}-offset-#{$i}. */
						@include gridBuild(margin-left, $percentage);
						float: left;
					}
				}
			}
		}
	}
}

// Friendly placeholders for common needs - calculated based on grid columns

$quarter: 				$grid-number-columns * (1/4);
$third: 					$grid-number-columns * (1/3);
$half:					$grid-number-columns * (1/2);
$two-third:				$grid-number-columns * (2/3);
$three-quarter:		$grid-number-columns * (3/4);

.col,
%col {
	&-quarter {
		@extend %col-#{$quarter};
	}
	&-third {
		@extend %col-#{$third};
	}
	&-half {
		@extend %col-#{$half};
	}
	&-two-third {
		@extend %col-#{$two-third};
	}
	&-three-quarter {
		@extend %col-#{$three-quarter};
	}
	&-full {
		@extend %col-#{$grid-number-columns};
	}
}

@each $breakpoint in $grid-breakpoints {
	.col-#{$breakpoint},
	%col-#{$breakpoint} {
		&-quarter {
			@extend %col-#{$breakpoint}-#{$quarter};
		}
		&-third {
			@extend %col-#{$breakpoint}-#{$third};
		}
		&-half {
			@extend %col-#{$breakpoint}-#{$half};
		}
		&-two-third {
			@extend %col-#{$breakpoint}-#{$two-third};
		}
		&-three-quarter {
			@extend %col-#{$breakpoint}-#{$three-quarter};
		}
		&-full {
			@extend %col-#{$breakpoint}-#{$grid-number-columns};
		}

		@if $grid-margins {
			&-margin-quarter {
				@extend %col-#{$breakpoint}-margin-#{$quarter};
			}
			&-margin-third {
				@extend %col-#{$breakpoint}-margin-#{$third};
			}
			&-margin-half {
				@extend %col-#{$breakpoint}-margin-#{$half};
			}
			&-margin-two-third {
				@extend %col-#{$breakpoint}-margin-#{$two-third};
			}
			&-margin-three-quarter {
				@extend %col-#{$breakpoint}-margin-#{$three-quarter};
			}
			&-margin-full {
				@extend %col-#{$breakpoint}-margin-#{$grid-number-columns};
			}
		}
		@if $grid-push {
			&-push-quarter {
				@extend %col-#{$breakpoint}-push-#{$quarter};
			}
			&-push-third {
				@extend %col-#{$breakpoint}-push-#{$third};
			}
			&-push-half {
				@extend %col-#{$breakpoint}-push-#{$half};
			}
			&-push-two-third {
				@extend %col-#{$breakpoint}-push-#{$two-third};
			}
			&-push-three-quarter {
				@extend %col-#{$breakpoint}-push-#{$three-quarter};
			}
			&-push-full {
				@extend %col-#{$breakpoint}-push-#{$grid-number-columns};
			}
		}
		@if $grid-pull {
			&-pull-quarter {
				@extend %col-#{$breakpoint}-pull-#{$quarter};
			}
			&-pull-third {
				@extend %col-#{$breakpoint}-pull-#{$third};
			}
			&-pull-half {
				@extend %col-#{$breakpoint}-pull-#{$half};
			}
			&-pull-two-third {
				@extend %col-#{$breakpoint}-pull-#{$two-third};
			}
			&-pull-three-quarter {
				@extend %col-#{$breakpoint}-pull-#{$three-quarter};
			}
			&-pull-full {
				@extend %col-#{$breakpoint}-pull-#{$grid-number-columns};
			}
		}
		@if $grid-offset {
			&-offset-quarter {
				@extend %col-#{$breakpoint}-offset-#{$quarter};
			}
			&-offset-third {
				@extend %col-#{$breakpoint}-offset-#{$third};
			}
			&-offset-half {
				@extend %col-#{$breakpoint}-offset-#{$half};
			}
			&-offset-two-third {
				@extend %col-#{$breakpoint}-offset-#{$two-third};
			}
			&-offset-three-quarter {
				@extend %col-#{$breakpoint}-offset-#{$three-quarter};
			}
			&-offset-full {
				@extend %col-#{$breakpoint}-offset-#{$grid-number-columns};
			}
		}
	}
}

@if $grid-classes {
	@for $i from 1 through $grid-number-columns {
		.col-#{$i} {
			@extend %col-#{$i};
		}
		@each $breakpoint in $grid-breakpoints {
			.col-#{$breakpoint} {
				&-#{$i} {
					@extend %col-#{$breakpoint}-#{$i};
				}
				@if $grid-margins {
					&-margin-#{$i} {
						@extend %col-#{$breakpoint}-margin-#{$i};
					}
				}
				@if $grid-push {
					&-push-#{$i} {
						@extend %col-#{$breakpoint}-push-#{$i};
					}
				}
				@if $grid-pull {
					&-pull-#{$i} {
						@extend %col-#{$breakpoint}-pull-#{$i};
					}
				}
				@if $grid-offset {
					&-offset-#{$i} {
						@extend %col-#{$breakpoint}-offset-#{$i};
					}
				}
			}
		}
	}
}