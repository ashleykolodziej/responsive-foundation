// =================================================================
// Grid Mixins
// =================================================================

@mixin col-margin-base {
	margin-left: $grid-margin-width#{"%"};
	margin-bottom: $grid-margin-width#{"%"};
	margin-top: 0;
	padding: $grid-margin-padding;
}

// A helper mixin to build grid styles. No need to use outside this file.
@mixin grid-build( $cssproperty, $amount ) {
	@if ( type_of( $amount ) == "number" ) {
		#{$cssproperty}: #{$amount}#{"%"};
	} @else {
		#{$cssproperty}: #{$amount};
	}
}

@mixin col-float {
	float: left;
}

@mixin grid-styles( $option, $col, $force: false ) {
	$percentage: nth( $grid-widths, $col + 1 );

	@if ( $force ) {
		left: initial;
		margin-left: initial;
		right: initial;
	}

	@if ( $option == "margin" ) {
		$percentage: nth( $grid-widths-margins, $col + 1 );
		@include grid-build( width, $percentage );

		@if ( $force ) {
			@include col-margin-base;
		}
	}

	@if ( $option == "" ) {
		@include grid-build( width, $percentage );
	}

	@if ( $option == "push" ) {
		@include grid-build( left, $percentage );
	}

	@if ( $option == "pull" ) {
		@include grid-build( right, $percentage );
	}

	@if ( $option == "offset" ) {
		@include grid-build( margin-left, $percentage );
	}
}

@mixin col( $breakpoint: "", $option: "", $col: $grid-number-columns, $force: true ) {
	$valid: map-get( $grid-supports, $option );

	// Automatically fixes inputs if you forget the option (usually with normal grid mixins)
	@if ( $valid == null and $option != "" ) {
		$col: $option;
		$option: "";
	}

	@if ( "string" == type-of( $col ) ) and ( map-get( $widths, $col ) ) {
		$col: map-get( $widths, $col );
	}

	@if ( $breakpoint != "" ) {
		@include breakpoint( $breakpoint, false ) {
			@include grid-styles( $option, $col, $force );
		}
	} @else {
		@include grid-styles( $option, $col, $force );
	}
}
